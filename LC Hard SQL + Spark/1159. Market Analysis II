/*
1159. Market Analysis II
Table: Users

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| user_id        | int     |
| join_date      | date    |
| favorite_brand | varchar |
+----------------+---------+
user_id is the primary key of this table.
This table has the info of the users of an online shopping website where users can sell and buy items.
Table: Orders

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| order_id      | int     |
| order_date    | date    |
| item_id       | int     |
| buyer_id      | int     |
| seller_id     | int     |
+---------------+---------+
order_id is the primary key of this table.
item_id is a foreign key to the Items table.
buyer_id and seller_id are foreign keys to the Users table.
Table: Items

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| item_id       | int     |
| item_brand    | varchar |
+---------------+---------+
item_id is the primary key of this table.
 

Write an  SQL query to find for each user, whether the brand of the second item (by date) they sold is their favorite brand. If a user sold less than two items, report the answer for that user as no.

It is guaranteed that no seller sold more than one item on a day.


The query result format is in the following example:

Users table:
+---------+------------+----------------+
| user_id | join_date  | favorite_brand |
+---------+------------+----------------+
| 1       | 2019-01-01 | Lenovo         |
| 2       | 2019-02-09 | Samsung        |
| 3       | 2019-01-19 | LG             |
| 4       | 2019-05-21 | HP             |
+---------+------------+----------------+

Orders table:
+----------+------------+---------+----------+-----------+
| order_id | order_date | item_id | buyer_id | seller_id |
+----------+------------+---------+----------+-----------+
| 1        | 2019-08-01 | 4       | 1        | 2         |
| 2        | 2019-08-02 | 2       | 1        | 3         |
| 3        | 2019-08-03 | 3       | 2        | 3         |
| 4        | 2019-08-04 | 1       | 4        | 2         |
| 5        | 2019-08-04 | 1       | 3        | 4         |
| 6        | 2019-08-05 | 2       | 2        | 4         |
+----------+------------+---------+----------+-----------+

Items table:
+---------+------------+
| item_id | item_brand |
+---------+------------+
| 1       | Samsung    |
| 2       | Lenovo     |
| 3       | LG         |
| 4       | HP         |
+---------+------------+

Result table:
+-----------+--------------------+
| seller_id | 2nd_item_fav_brand |
+-----------+--------------------+
| 1         | no                 |
| 2         | yes                |
| 3         | yes                |
| 4         | no                 |
+-----------+--------------------+

The answer for the user with id 1 is no because they sold nothing.
The answer for the users with id 2 and 3 is yes because the brands of their second sold items are their favorite brands.
The answer for the user with id 4 is no because the brand of their second sold item is not their favorite brand.

*/

Create table Users (user_id int, join_date date, favorite_brand varchar(10)) ;
Create table Orders (order_id int, order_date date, item_id int, buyer_id int, seller_id int) ;
Create table Items (item_id int, item_brand varchar(10)) ;

insert into Users values 
(1, "2019-01-01", "Lenovo"),
(2, "2019-02-09", "Samsung"),
(3, "2019-01-19", "LG"),
(4, "2019-05-21", "HP");

insert into Orders values 
(1, "2019-08-01", 4, 1, 2),
(2, "2019-08-02", 2, 1, 3),
(3, "2019-08-03", 3, 2, 3),
(4, "2019-08-04", 1, 4, 2),
(5, "2019-08-04", 1, 3, 4),
(6, "2019-08-05", 2, 2, 4);

insert into Items values 
(1, "Samsung"),
(2, "Lenovo"),
(3, "LG"),
(4, "HP");

select * from Users ;
select * from Orders ; 
select * from Items ;

with cte1 as (
select
  u.user_id,
  u.favorite_brand,
  o.order_date,
  i.item_brand,
  dense_rank() over(partition by u.user_id order by o.order_date) dr,
  count(*) over(partition by u.user_id) count_items
from Users u left join Orders o
on u.user_id=o.seller_id
left join Items i 
on o.item_id=i.item_id
), cte2 as (
select 
  user_id, 
  case when count_items < 2 then 'no' 
       when count_items >= 2 and dr=2 and favorite_brand=item_brand then 'yes'
       when count_items >= 2 and dr=2 and favorite_brand<>item_brand then 'no'
  else null end as 2nd_item_fav_brand
from cte1 
)
select
  *
from cte2 where 2nd_item_fav_brand is not null 
; 



import org.apache.spark.sql.Row
import org.apache.spark.sql.types._
import org.apache.spark.sql.functions._
import org.apache.spark.sql.expressions.Window

val dataUsers = Seq(
  Row(1, "2019-01-01", "Lenovo"),
  Row(2, "2019-02-09", "Samsung"),
  Row(3, "2019-01-19", "LG"),
  Row(4, "2019-05-21", "HP")
)

val dataOrders = Seq(
  Row(1, "2019-08-01", 4, 1, 2),
  Row(2, "2019-08-02", 2, 1, 3),
  Row(3, "2019-08-03", 3, 2, 3),
  Row(4, "2019-08-04", 1, 4, 2),
  Row(5, "2019-08-04", 1, 3, 4),
  Row(6, "2019-08-05", 2, 2, 4)
)

val dataItems = Seq(
  Row(1, "Samsung"),
  Row(2, "Lenovo"),
  Row(3, "LG"),
  Row(4, "HP")
)

val schemaUsers = StructType(List(
  StructField("user_id", IntegerType),
  StructField("join_date", StringType),
  StructField("favorite_brand", StringType)
))

val schemaOrders = StructType(List(
  StructField("order_id", IntegerType),
  StructField("order_date", StringType),
  StructField("item_id", IntegerType),
  StructField("buyer_id", IntegerType),
  StructField("seller_id", IntegerType)
))

val schemaItems = StructType(List(
  StructField("item_id", IntegerType),
  StructField("item_brand", StringType)
))

val rddUsers = spark.sparkContext.parallelize(dataUsers)
val dfUsers = spark.createDataFrame(rddUsers, schemaUsers)

val rddOrders = spark.sparkContext.parallelize(dataOrders)
val dfOrders = spark.createDataFrame(rddOrders, schemaOrders)

val rddItems = spark.sparkContext.parallelize(dataItems)
val dfItems = spark.createDataFrame(rddItems, schemaItems)

dfUsers.alias("u"
).join(dfOrders.alias("o"), $"u.user_id" === $"o.seller_id", "left"
).join(dfItems.alias("i"), $"o.item_id" === $"i.item_id", "left"
).withColumn("dr", dense_rank().over(Window.partitionBy($"u.user_id").orderBy($"order_date"))
).withColumn("count_items", count("*").over(Window.partitionBy($"u.user_id"))
).withColumn("2nd_item_fav_brand", when($"count_items" < lit(2), lit("no")).when($"count_items" >= lit(2) && $"dr" === lit(2) && $"favorite_brand" === $"item_brand", lit("yes")).when($"count_items" >= lit(2) && $"dr" === lit(2) && $"favorite_brand" =!= $"item_brand", lit("no")).otherwise(lit(null))).where($"2nd_item_fav_brand".isNotNull).select("user_id", "2nd_item_fav_brand").show(false)
