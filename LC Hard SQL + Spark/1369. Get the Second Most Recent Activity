/*
1369. Get the Second Most Recent Activity
Table: UserActivity

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| username      | varchar |
| activity      | varchar |
| startDate     | Date    |
| endDate       | Date    |
+---------------+---------+
This table does not contain primary key.
This table contain information about the activity performed of each user in a period of time.
A person with username performed a activity from startDate to endDate.

Write an SQL query to show the second most recent activity of each user.

If the user only has one activity, return that one. 

A user can't perform more than one activity at the same time. Return the result table in any order.

The query result format is in the following example:

UserActivity table:
+------------+--------------+-------------+-------------+
| username   | activity     | startDate   | endDate     |
+------------+--------------+-------------+-------------+
| Alice      | Travel       | 2020-02-12  | 2020-02-20  |
| Alice      | Dancing      | 2020-02-21  | 2020-02-23  |
| Alice      | Travel       | 2020-02-24  | 2020-02-28  |
| Bob        | Travel       | 2020-02-11  | 2020-02-18  |
+------------+--------------+-------------+-------------+

Result table:
+------------+--------------+-------------+-------------+
| username   | activity     | startDate   | endDate     |
+------------+--------------+-------------+-------------+
| Alice      | Dancing      | 2020-02-21  | 2020-02-23  |
| Bob        | Travel       | 2020-02-11  | 2020-02-18  |
+------------+--------------+-------------+-------------+

The most recent activity of Alice is Travel from 2020-02-24 to 2020-02-28, before that she was dancing from 2020-02-21 to 2020-02-23.
Bob only has one record, we just take that one.

*/


create table UserActivity (
  username varchar(20),
  activity varchar(20),
  startDate date,
  endDate date
);

insert into UserActivity values 
('Alice','Travel','2020-02-12','2020-02-20'),
('Alice','Dancing','2020-02-21','2020-02-23'),
('Alice','Travel','2020-02-24','2020-02-28'),
('Bob','Travel','2020-02-11','2020-02-18');


select username, activity, startDate, endDate from (
  select 
    *,
    count(activity) over(partition by username) cnt_activity,
    rank() over(partition by username order by startDate desc) dr
  from UserActivity 
) T
where T.dr=2 or T.cnt_activity=1
;


import org.apache.spark.sql.Row
import org.apache.spark.sql.types._
import org.apache.spark.sql.expressions.Window
import org.apache.spark.sql.functions._

val data = Seq(
  Row("Alice","Travel","2020-02-12","2020-02-20"),
  Row("Alice","Dancing","2020-02-21","2020-02-23"),
  Row("Alice","Travel","2020-02-24","2020-02-28"),
  Row("Bob","Travel","2020-02-11","2020-02-18"),
)
val schema = StructType(Array(
  StructField("username", StringType),
  StructField("activity", StringType),
  StructField("startDate", StringType),
  StructField("endDate", StringType),
))

val rowRDD = spark.sparkContext.parallelize(data)
val df = spark.createDataFrame(rowRDD, schema)

df.withColumn(
  "startDate", to_date($"startDate", "yyyy-MM-dd")
 ).withColumn("cnt", count("*").over(Window.partitionBy($"username"))
 ).withColumn("rnk", rank().over(Window.partitionBy($"username").orderBy($"startDate".desc))
 ).filter($"cnt" === 1 or $"rnk" === 2).select("username", "activity", "startDate", "endDate").show(false)
 
 
